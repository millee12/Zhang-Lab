x_solidtmp1(1:nsd,:) = solid_coor_curr(1:nsd,:)+dt*solid_vel(1:nsd,:) ! first update

     call search_inf_pa(x_solidtmp1,x,nn,nn_solid,nsd,ne,nen,ien,infdomain,&
                        ne_intlocal,ien_intlocal)

    call data_exchange_FEM(solid_vel,nn_solid,d(1:nsd,:),nn,dvolume,nsd, &
                        1,ne,nen,ne_solid,nen_solid,&
                       x_solidtmp1,solid_fem_con,x,ien,infdomain,d(nsd+1,:),pre_inter)

x_solidtmp2(1:nsd,:) = 0.75*solid_coor_curr(1:nsd,:)+0.25*x_solidtmp1(1:nsd,:)+0.25*dt*solid_vel(1:nsd,:) ! second update

     call search_inf_pa(x_solidtmp2,x,nn,nn_solid,nsd,ne,nen,ien,infdomain,&
                        ne_intlocal,ien_intlocal)

    call data_exchange_FEM(solid_vel,nn_solid,d(1:nsd,:),nn,dvolume,nsd, &
                        1,ne,nen,ne_solid,nen_solid,&
                       x_solidtmp2,solid_fem_con,x,ien,infdomain,d(nsd+1,:),pre_inter)

solid_coor_curr(1:nsd,:) = solid_coor_curr(1:nsd,:)/3.0 + 2.0*x_solidtmp2(1:nsd,:)/3.0 + 2*dt*solid_vel(1:nsd,:)/3.0 ! third update

solid_accel(:,:)=(solid_vel(:,:)-solid_prevel(:,:))/dt
solid_prevel(:,:)=solid_vel(:,:)

if (myid==0) then
  write(*,*) 'maximum solid velocity is =', maxval(solid_vel(1:nsd_solid,:))
end if
 
